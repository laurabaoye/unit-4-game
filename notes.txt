< notes >

* mind map structure
* 2 attributes
    * host | referee
    * player | opponent

* UI
    * "press any keys to get started"
    * "wins | Loss"
    * "current word"
    * "number of guesses remaining"
    * "letters already guessed"
    * bonus
        * timer | warning
        * animation: correct | wrong


^ pseudo code
* press any key to start
* show number chars
    * display letter if correct
* compare letters for word
    * letters only
    * only new letters
* display used & incorrect letters
* limit number of guesses
* bonus
    * victory screen
    * loser screen
    * animation for incorrect
    * score 5 wins victory
    * time limit restriction


^ rule
- Use key events to listen for the letters that your players will type

- Press any key to get started!

- Wins: (# of times user guessed the word correctly).
    * If the word is madonna, display it like this when the game starts: _ _ _ _ _ _ _.
    * As the user guesses the correct letters, reveal them: m a d o _ _ a.

- Number of Guesses Remaining: (# of guesses remaining for the user).

- Letters Already Guessed: (Letters the user has guessed, displayed like L Z Y H).



^ bonus
- Play a sound or song when the user guesses their word correctly, like in our demo.

- Write some stylish CSS rules to make a design that fits your game's theme.

- HARD MODE: Organize your game code as an object, except for the key events to get the letter guessed. This will be a challenge if you haven't coded with JavaScript before, but we encourage anyone already familiar with the language to try this out.

- Save your whole game and its properties in an object.

- Save any of your game's functions as methods, and call them underneath your object declaration using event listeners.

- Don't forget to place your global variables and functions above your object.
    * Remember: global variables, then objects, then calls.

- Definitely talk with a TA or your instructor if you get tripped up during this challenge.


<player>
^ see input request
* includes 'find a word'
* includes 'render page'

^ guess letter
* includes 'review the guess'
* includes 'add guess to list'
* includes 'update page'

^ see win/loss status
* includes 'review leftover guesses'
* includes 'confirm win/loss'

